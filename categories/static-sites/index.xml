<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>static-sites on Dan Kleiman</title>
    <link>/dankleiman.github.io/categories/static-sites/index.xml</link>
    <description>Recent content in static-sites on Dan Kleiman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/dankleiman.github.io/categories/static-sites/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Migrating Posts and Pages from Wordpress to Jekyll</title>
      <link>/dankleiman.github.io/2016/03/11/migrating-posts-and-pages-from-wordpress-to-jekyll</link>
      <pubDate>Fri, 11 Mar 2016 13:55:15 -0500</pubDate>
      
      <guid>/dankleiman.github.io/2016/03/11/migrating-posts-and-pages-from-wordpress-to-jekyll</guid>
      <description>&lt;p&gt;&lt;em&gt;This is Part 1 in a series on &lt;a href=&#34;dankleiman.github.io/blog/2016/03/09/migrating-from-wordpress-to-jekyll/&#34;&gt;Migrating from Wordpress to Jekyll&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The documentation for &lt;a href=&#34;https://jekyllrb.com/docs/quickstart/&#34;&gt;getting started with Jekyll&lt;/a&gt; is great. I&amp;rsquo;m not going to rehash everything that&amp;rsquo;s covered there.&lt;/p&gt;

&lt;p&gt;Instead, this post and the others in the series will be more like, &amp;ldquo;here&amp;rsquo;s the order I wish I had done things in&amp;rdquo; or &amp;ldquo;here&amp;rsquo;s everything I ended up needing to pull together to get stuff working&amp;rdquo;. I hope it helps you and saves you time if you ever decide to do a similar migration from a self-hosted Wordpress install to Jekyll.&lt;/p&gt;

&lt;p&gt;So here we go&amp;hellip;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;migrating-posts-and-pages&#34;&gt;Migrating Posts and Pages&lt;/h2&gt;

&lt;p&gt;To migrate your existing posts and pages from Wordpress, here&amp;rsquo;s what you need to do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install Jekyll&lt;/strong&gt; and create a new instance in the directory of your choice (follow the commands &lt;a href=&#34;https://jekyllrb.com/docs/quickstart/&#34;&gt;here&lt;/a&gt; &amp;ndash; you can even run &lt;code&gt;jekyll serve&lt;/code&gt; to see the boilerplate of the site you just created).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Export a copy of your Wordpress database&lt;/strong&gt; (I was on WPEngine and they have a good explanation of &lt;a href=&#34;https://wpengine.com/support/exporting-database/&#34;&gt;how to export from phpMyAdmin&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;If you don&amp;rsquo;t have it already, &lt;strong&gt;you will need mysql installed&lt;/strong&gt; to work with the Wordpress database &amp;ndash; using homebrew you can &lt;code&gt;brew install mysql&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create a new database&lt;/strong&gt; through your mysql console and use the source command to load the .sql file you exported in step 2: that&amp;rsquo;s &lt;code&gt;mysql -u root&lt;/code&gt; to acces the console, then &lt;code&gt;CREATE DATABSE whatever_you_want_to_call_your_wordpress_db&lt;/code&gt; to create a new database, &lt;code&gt;use whatever_you_want_to_call_your_wordpress_db&lt;/code&gt; to start using the database, and finally, &lt;code&gt;source the_file_you_exported.sql&lt;/code&gt; to load all the data.&lt;/li&gt;
&lt;li&gt;Now we&amp;rsquo;re ready to use the &lt;strong&gt;Jekyll Importer for Wordpress&lt;/strong&gt;. You&amp;rsquo;ll need a few more gems installed to be able to read from mysql (&lt;a href=&#34;http://import.jekyllrb.com/docs/wordpress/&#34;&gt;see importer docs&lt;/a&gt;), but then, with a local copy of your Wordpress database, the import will be pretty straightforward.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inspect your new Jekyll posts and pages&lt;/strong&gt;: the import will dump all your Wordpress posts into a directory called &amp;lsquo;_posts&amp;rsquo;. I don&amp;rsquo;t know what this will look like if your Wordpress permalink structure does not have the YYYY-MM-DD-post-title format, but Jekyll relies on this date format when generating your site. In other words, an html file like this: &amp;lsquo;/_posts/2016-03-11-migrating-wordpress-posts-and-pages.html&amp;rsquo; will be turned into a page at &lt;a href=&#34;http://your-domain.com/some-category/2016/03/11/migrating-wordpress-posts-and-pages.html&#34;&gt;http://your-domain.com/some-category/2016/03/11/migrating-wordpress-posts-and-pages.html&lt;/a&gt;. You can ultimately tweak the permalinks, but the actually page generation seems to rely on the date format in the source post file name.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;a-note-about-pages&#34;&gt;A Note about Pages&lt;/h2&gt;

&lt;p&gt;If you had a lot of pages in Wordpress, you will find that the import has created directories named after these pages in the root directory of your Jekyll install. Inside each of these directories is an index.html (or whatever you specified in the importer, i.e. md) file with the actual html content from your Wordpress site.&lt;/p&gt;

&lt;p&gt;I haven&amp;rsquo;t completely decided what to do with these pages for my site yet. In some cases, they are no longer relevant because they reference features of the site I won&amp;rsquo;t be supporting in this &amp;ldquo;archive&amp;rdquo; version of the old site.&lt;/p&gt;

&lt;p&gt;In other cases, though, they contain content that could have easily been a post. For these post-worthy pages, I am moving them to the &amp;lsquo;_posts&amp;rsquo; directory, changing the file name of the index.html file to use the date specificied in the YAML front matter generated by the importer (probably the published date of the page) and the name of the directory, so: index.html inside of &amp;lsquo;/some-great-page&amp;rsquo; that was published on 2014-05-31 becomes &amp;lsquo;/_posts/2014-05-31-some-great-page.html&amp;rsquo;. I like this approach because now when you build your site, Jekyll will automatically add this page to the list of posts in the correct chronological order.&lt;/p&gt;

&lt;p&gt;Either way, I plan to minimalize the number of &amp;lsquo;page&amp;rsquo; directories in the root of the site and use the conventions built up around posts in Jekyll to deliver as much of the content as possible (see below on categories and tags, for example).&lt;/p&gt;

&lt;h2 id=&#34;categories-and-tags&#34;&gt;Categories and Tags&lt;/h2&gt;

&lt;p&gt;Jekyll has some handy &lt;a href=&#34;https://jekyllrb.com/docs/variables/&#34;&gt;global variables&lt;/a&gt; built in that allow you to group posts together and display them and generally reference attributes about your site and its contents.&lt;/p&gt;

&lt;p&gt;Specifically, as I was thinking about how to structure the new site, I was wondering about different ways to group posts together, based on the categories I had used in the Wordpress site, instead of just displaying one long reverse-chronological list.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&#34;https://codinfox.github.io/dev/2015/03/06/use-tags-and-categories-in-your-jekyll-based-github-pages/&#34;&gt;this excellent post on extending some basic layouts to take advantage of categories&lt;/a&gt;. Incidentally, hosting on Github Pages, which I plan to do, limits the number of Jekyll plugins you can use, but that&amp;rsquo;s fine with me.&lt;/p&gt;

&lt;p&gt;Taking the approach from the article above, if you want to show all Tai Chi posts on one page, you create a page called &amp;lsquo;Tai Chi Articles&amp;rsquo; and set its category as &amp;lsquo;Tai Chi&amp;rsquo;. You specify the layout as &amp;lsquo;category&amp;rsquo;, which you build in your &amp;lsquo;_layouts&amp;rsquo; directory.&lt;/p&gt;

&lt;p&gt;In the new layout, you are iterating through all the posts and checking for a match to the category specified on the page that uses that layout.&lt;/p&gt;

&lt;p&gt;In other words, on the &amp;lsquo;Tai Chi Articles&amp;rsquo; page, you are iterating through all posts that have the category &amp;lsquo;Tai Chi&amp;rsquo; and linking to them in this list. And I keep having to remind myself, this happens during the build, so you generate a nice, quick-loading page!&lt;/p&gt;

&lt;p&gt;With my categories set up and pages repurposed as posts or eliminated, I felt like I was making good progress on the migration.&lt;/p&gt;

&lt;p&gt;Of course, questions about redirection from the pages I converted or deleted and styling and layout started to fill my head&amp;hellip;but we&amp;rsquo;re going to get to that in future articles!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrating from Wordpress to Jekyll</title>
      <link>/dankleiman.github.io/2016/03/09/migrating-from-wordpress-to-jekyll</link>
      <pubDate>Wed, 09 Mar 2016 13:09:18 -0500</pubDate>
      
      <guid>/dankleiman.github.io/2016/03/09/migrating-from-wordpress-to-jekyll</guid>
      <description>&lt;p&gt;So, I&amp;rsquo;ve decided to migrate my &lt;a href=&#34;http://dankleiman.com&#34;&gt;Tai Chi site at dankleiman.com&lt;/a&gt; from Wordpress to a new static site using Jekyll.&lt;/p&gt;

&lt;p&gt;Since I haven&amp;rsquo;t posted there in almost two years, but I get a steady stream of new subscribers who want to learn about Tai Chi, qigong, and meditation, I thought it would be good to give the 300+ pages and posts a more evergreen feel.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The switch from Wordpress to Jekyll is exciting for me because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I get to learn a new framework that&amp;rsquo;s in line with tools I use every day, like Ruby and git.&lt;/li&gt;
&lt;li&gt;I can deliver existing content to new users quickly and easily with plain html.&lt;/li&gt;
&lt;li&gt;The content on the site deserves a fresh coat of paint and likely some re-writing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I begin to play with the different components for the migration from Wordpress to Jekyll, it seems like the project will break down into the following areas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;dankleiman.github.io/blog/2016/03/11/migrating-posts-and-pages-from-wordpress-to-jekyll/&#34;&gt;Migrating Posts and Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Migrating Assets&lt;/li&gt;
&lt;li&gt;Grooming/Revisiting Existing Content&lt;/li&gt;
&lt;li&gt;Site Look and Feel&lt;/li&gt;
&lt;li&gt;Handling Form Submission&lt;/li&gt;
&lt;li&gt;DNS and Redirection&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I plan to write about each of these areas and link to each topic as I publish more about the different decisions and steps that go into each part of the migration process.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>